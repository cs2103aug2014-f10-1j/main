//@author: a0093874n-unused



	/**
	 * origin: src\ui\StreamUI.java
	 */


	/**
	 * Constructs the usable buttons of Stream's User Interface.
	 * 
	 * @deprecated
	 */
	@SuppressWarnings("unused")
	private void addNavigationButtons() {
		addFirstPageButton();
		addPrevPageButton();
		addNextPageButton();
		addLastPageButton();
		/*
		 * buttons.add(firstPageButton); buttons.add(prevPageButton);
		 * buttons.add(nextPageButton); buttons.add(lastPageButton);
		 */
	}

	/**
	 * Constructs the navigate-to-first-page button.
	 * 
	 * @deprecated
	 */
	private void addFirstPageButton() {
		// firstPageButton = new JButton(StreamConstants.UI.BTN_FIRST);
		/*
		 * firstPageButton.addActionListener(new ActionListener() {
		 * 
		 * @Override public void actionPerformed(ActionEvent e) {
		 * stream.filterAndProcessInput("first"); } });
		 */
		// addComponent(firstPageButton, 25, 500, 160, 32);
	}

	/**
	 * Constructs the navigate-to-previous-page button.
	 * 
	 * @deprecated
	 */
	private void addPrevPageButton() {
		// prevPageButton = new JButton(StreamConstants.UI.BTN_PREV);
		/*
		 * prevPageButton.addActionListener(new ActionListener() {
		 * 
		 * @Override public void actionPerformed(ActionEvent e) {
		 * stream.filterAndProcessInput("prev"); } });
		 */
		// addComponent(prevPageButton, 205, 500, 160, 32);
	}

	/**
	 * Constructs the navigate-to-next-page button.
	 * 
	 * @deprecated
	 */
	private void addNextPageButton() {
		// nextPageButton = new JButton(StreamConstants.UI.BTN_NEXT);
		/*
		 * nextPageButton.addActionListener(new ActionListener() {
		 * 
		 * @Override public void actionPerformed(ActionEvent e) {
		 * stream.filterAndProcessInput("next"); } });
		 */
		// addComponent(nextPageButton, 385, 500, 160, 32);
	}

	/**
	 * Constructs the navigate-to-last-page button.
	 * 
	 * @deprecated
	 */
	private void addLastPageButton() {
		// lastPageButton = new JButton(StreamConstants.UI.BTN_LAST);
		/*
		 * lastPageButton.addActionListener(new ActionListener() {
		 * 
		 * @Override public void actionPerformed(ActionEvent e) {
		 * stream.filterAndProcessInput("last"); } });
		 */
		// addComponent(lastPageButton, 565, 500, 160, 32);
	}

	/**
	 * Constructs the undo button.
	 * 
	 * @deprecated
	 */
	@SuppressWarnings("unused")
	private void addUndoButton() {
		// undoButton = new JButton(StreamConstants.UI.BTN_UNDO);
		/*
		 * undoButton.addActionListener(new ActionListener() {
		 * 
		 * @Override public void actionPerformed(ActionEvent e) {
		 * stream.filterAndProcessInput(StreamConstants.Commands.UNDO); } });
		 */
	}

	/**
	 * Constructs the clear-search-result button.
	 * 
	 * @deprecated
	 */
	@SuppressWarnings("unused")
	private void addClearSearchButton() {
		// clearSearchButton = new JButton(StreamConstants.UI.BTN_CLEAR);
		/*
		 * clearSearchButton.addActionListener(new ActionListener() {
		 * 
		 * @Override public void actionPerformed(ActionEvent e) {
		 * stream.filterAndProcessInput(StreamConstants.Commands.CLRSRC); } });
		 */
	}

	/**
	 * Determines which navigator buttons are clickable based on the current
	 * page shown and total pages available.
	 * 
	 * @deprecated
	 */
	@SuppressWarnings("unused")
	private void determineClickableNavigators() {
		/*
		 * firstPageButton.setEnabled(true); prevPageButton.setEnabled(true);
		 * nextPageButton.setEnabled(true); lastPageButton.setEnabled(true); if
		 * (pageShown == 1) { firstPageButton.setEnabled(false);
		 * prevPageButton.setEnabled(false); } if (pageShown == totalPage) {
		 * nextPageButton.setEnabled(false); lastPageButton.setEnabled(false); }
		 */
	}

	// End of segment: src\ui\StreamUI.java





